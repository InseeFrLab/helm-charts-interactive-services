name: Lint and Test Charts

on:
  pull_request:
    branches:
    - main

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      #https://github.com/helm/chart-testing/issues/192
      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --validate-maintainers=false

      - name: List changed chart folders
        uses: dorny/changed-files-action@v3.2.2
        id: changes
        with:
          format: "json"
          path: "charts"
  changes:
    if: ${{ github.actor != 'renovate[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      jupyter-pyspark: ${{ steps.filter.outputs.jupyter-pyspark }}
      jupyter-python: ${{ steps.filter.outputs.jupyter-python }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          base:
            - 'charts/jupyter-pyspark/**'
          base:
            - 'charts/jupyter-python/**'
   unittest:
    needs: changes
    strategy:
      matrix:
          # Parse JSON array containing names of all filters matching any of changed files
          # e.g. ['package1', 'package2'] if both package folders contains changes
      package: ${{ fromJSON(needs.changes.outputs.charts) }}
      runs-on: ubuntu-latest
      steps:        
        - name: helm unit test
          run: |
            echo "Changed chart folders:"
            echo "${{ steps.changes.outputs.folders }}"