{
  "$schema": "http://json-schema.org/draft-07/schema",
  "type": "object",
  "properties": {
    "service": {
      "description": "Service specific configuration",
      "type": "object",
      "properties": {
        "image": {
          "description": "image docker",
          "type": "object",
          "properties": {
            "pullPolicy": {
              "type": "string",
              "description": "option when pulling the docker image",
              "default": "IfNotPresent",
              "enum": [
                "IfNotPresent",
                "Always",
                "Never"
              ]
            },
            "version": {
              "description": "vscode supported version",
              "type": "string",
              "default": "inseefrlab/onyxia-vscode-python:py3.12.7-gpu",
              "listEnum": [
                "inseefrlab/onyxia-vscode-python:py3.12.7-gpu",
                "inseefrlab/onyxia-vscode-python:py3.11.10-gpu"
              ],
              "render": "list",
              "hidden": {
                "value": true,
                "path": "service/image/custom/enabled"
              }
            },
            "custom": {
              "description": "use a custom vscode docker image",
              "type": "object",
              "properties": {
                "enabled": {
                  "title": "custom image",
                  "type": "boolean",
                  "description": "use a custom vscode docker images",
                  "default": false,
                  "x-onyxia": {
                    "overwriteSchemaWith": "ide/customImage.json"
                  }
                },
                "version": {
                  "description": "vscode unsupported version",
                  "type": "string",
                  "default": "inseefrlab/onyxia-vscode-python:py3.12.7-gpu",
                  "hidden": {
                    "value": false,
                    "path": "service/image/custom/enabled"
                  }
                }
              }
            }
          }
        },
        "customPythonEnv": {
          "title": "custom python environment",
          "type": "boolean",
          "description": "Use a custom python environment",
          "default": false
        }
      }
    },
    "resources": {
      "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/resources-gpu.json"
      },
      "properties": {
        "requests": {
          "description": "Guaranteed resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The amount of cpu guaranteed",
              "title": "CPU",
              "type": "string",
              "default": "100m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "cpu",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.cpuRequest",
                "useRegionSliderConfig": "cpu"
              }
            },
            "memory": {
              "description": "The amount of memory guaranteed",
              "title": "memory",
              "type": "string",
              "default": "2Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "memory",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.memoryRequest",
                "useRegionSliderConfig": "memory"
              }
            }
          }
        },
        "limits": {
          "description": "max resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The maximum amount of cpu",
              "title": "CPU",
              "type": "string",
              "default": "30000m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 40000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "cpu",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.cpuLimit",
                "useRegionSliderConfig": "cpu"
              }
            },
            "memory": {
              "description": "The maximum amount of memory",
              "title": "Memory",
              "type": "string",
              "default": "50Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 200,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "memory",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.memoryLimit",
                "useRegionSliderConfig": "memory"
              }
            },
            "nvidia.com/gpu": {
              "description": "GPU to allocate to this instance. This is also requested",
              "type": "string",
              "default": "1",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 3,
              "sliderStep": 1,
              "sliderUnit": "",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.gpu",
                "useRegionSliderConfig": "gpu"
              }
            }
          }
        }
      }
    },
    "persistence": {
      "description": "Configuration for persistence",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/persistence.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Create a persistent volume",
          "default": true
        },
        "size": {
          "type": "string",
          "title": "Persistent volume size",
          "description": "Size of the persistent volume",
          "default": "10Gi",
          "form": true,
          "render": "slider",
          "sliderMin": 1,
          "sliderMax": 100,
          "sliderStep": 1,
          "sliderUnit": "Gi",
          "x-onyxia": {
            "overwriteDefaultWith": "region.resources.disk",
            "useRegionSliderConfig": "disk"
          },
          "hidden": {
            "value": false,
            "path": "persistence/enabled"
          }
        }
      }
    },
    "init": {
      "description": "Init parameters",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/init.json"
      },
      "properties": {
        "regionInit": {
          "type": "string",
          "description": "region initialization script",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.initScriptUrl}}"
          }
        },
        "regionInitCheckSum": {
          "type": "string",
          "description": "region initialization script",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.initScriptCheckSum}}"
          }
        },
        "personalInit": {
          "type": "string",
          "description": "user initialization script",
          "default": ""
        },
        "personalInitArgs": {
          "type": "string",
          "description": "args for user initialization script",
          "default": ""
        }
      }
    },
    "extraEnvVars": {
      "description": "environment variables available within your service",
      "type": "array",
      "default": [],
      "x-onyxia": {
        "hidden": true,
        "overwriteSchemaWith": "ide/extraenv.json"
      },
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "default": "",
            "pattern": "^[a-zA-Z0-9_]+$"
          },
          "value": {
            "type": "string",
            "default": ""
          }
        }
      }
    },
    "kubernetes": {
      "description": "configuration of your kubernetes access",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/role.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "allow your service to access your namespace ressources",
          "default": true
        },
        "role": {
          "type": "string",
          "description": "bind your service account to this kubernetes default role",
          "default": "view",
          "hidden": {
            "value": false,
            "path": "kubernetes/enabled"
          },
          "listEnum": [
            "view",
            "edit",
            "admin"
          ],
          "render": "list"
        }
      }
    },
    "openshiftSCC": {
      "description": "configuration for openshift compatibility",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/openshiftSCC.json"
      },
      "properties": {
        "enabled": {
          "description": "enable rolebinding with openshift scc",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "region.openshiftSCC.enabled"
          }
        },
        "scc": {
          "type": "string",
          "description": "name of scc for rolebinding",
          "default": "anyuid",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "region.openshiftSCC.scc"
          }
        }
      }
    },
    "vault": {
      "description": "Configuration of vault client",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/vault.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Add vault temporary identity inside your environment",
          "default": true
        },
        "token": {
          "description": "token vault",
          "type": "string",
          "render": "password",
          "x-onyxia": {
            "overwriteDefaultWith": "{{vault.VAULT_TOKEN}}"
          },
          "hidden": {
            "value": false,
            "path": "vault/enabled"
          }
        },
        "url": {
          "description": "url of vault server",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{vault.VAULT_ADDR}}"
          },
          "hidden": {
            "value": false,
            "path": "vault/enabled"
          }
        },
        "mount": {
          "description": "mount of the v2 secret engine",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{vault.VAULT_MOUNT}}"
          },
          "hidden": {
            "value": false,
            "path": "vault/enabled"
          }
        },
        "directory": {
          "description": "top level directory",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{vault.VAULT_TOP_DIR}}"
          },
          "hidden": {
            "value": false,
            "path": "vault/enabled"
          }
        },
        "secret": {
          "description": "the path of the secret to convert into a list of environment variables",
          "type": "string",
          "default": "",
          "hidden": {
            "value": false,
            "path": "vault/enabled"
          }
        }
      }
    },
    "s3": {
      "description": "Configuration of temporary identity",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/s3.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Add S3 temporary identity inside your environment",
          "default": true
        },
        "accessKeyId": {
          "description": "AWS Access Key",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "s3.AWS_ACCESS_KEY_ID"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "endpoint": {
          "description": "AWS S3 Endpoint",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_S3_ENDPOINT}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "defaultRegion": {
          "description": "AWS S3 default region",
          "type": "string",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_DEFAULT_REGION}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "secretAccessKey": {
          "description": "AWS S3 secret access key",
          "type": "string",
          "render": "password",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SECRET_ACCESS_KEY}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "sessionToken": {
          "description": "AWS S3 session Token",
          "type": "string",
          "render": "password",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.AWS_SESSION_TOKEN}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "pathStyleAccess": {
          "description": "S3 path style acces",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.pathStyleAccess}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        },
        "workingDirectoryPath": {
          "description": "S3 working directory Path ",
          "type": "string",
          "default": "",
          "x-onyxia": {
            "overwriteDefaultWith": "{{s3.workingDirectoryPath}}"
          },
          "hidden": {
            "value": false,
            "path": "s3/enabled"
          }
        }
      }
    },
    "git": {
      "description": "Git user configuration",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/git.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Add git config inside your environment",
          "default": true
        },
        "name": {
          "type": "string",
          "description": "user name for git",
          "default": "",
          "x-onyxia": {
            "overwriteDefaultWith": "{{git.name}}"
          },
          "hidden": {
            "value": false,
            "path": "git/enabled"
          }
        },
        "email": {
          "type": "string",
          "description": "user email for git",
          "default": "",
          "x-onyxia": {
            "overwriteDefaultWith": "{{git.email}}"
          },
          "hidden": {
            "value": false,
            "path": "git/enabled"
          }
        },
        "cache": {
          "type": "string",
          "description": "duration in seconds of the credentials cache duration",
          "default": "",
          "x-onyxia": {
            "overwriteDefaultWith": "{{git.credentials_cache_duration}}"
          },
          "hidden": {
            "value": false,
            "path": "git/enabled"
          }
        },
        "token": {
          "type": "string",
          "description": "personal access token",
          "default": "",
          "render": "password",
          "x-onyxia": {
            "overwriteDefaultWith": "{{git.token}}"
          },
          "hidden": {
            "value": false,
            "path": "git/enabled"
          }
        },
        "repository": {
          "type": "string",
          "description": "projet",
          "default": "",
          "x-onyxia": {
            "overwriteDefaultWith": "{{git.project}}"
          },
          "hidden": {
            "value": false,
            "path": "git/enabled"
          }
        },
        "branch": {
          "type": "string",
          "description": "Branch automatically checked out",
          "default": "",
          "hidden": {
            "value": "",
            "path": "git/repository"
          }
        }
      }
    },
    "networking": {
      "type": "object",
      "form": true,
      "title": "Networking detail",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/networking.json"
      },
      "properties": {
        "user": {
          "type": "object",
          "description": "user defined port",
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable a custom service port",
              "description": "Enable a custom service port",
              "default": false
            },
            "port": {
              "title": "Custom service port",
              "description": "Port number of a single custom service to expose",
              "type": "integer",
              "hidden": {
                "value": false,
                "path": "networking/user/enabled"
              },
              "default": 5000
            },
            "ports": {
              "title": "Custom service ports",
              "description": "Port numbers of custom services to expose",
              "type": "array",
              "items": {
                "type": "integer",
                "uniqueItems": true,
                "default": 5000
              },
              "default": [],
              "x-onyxia": {
                "hidden": true
              }
            }
          }
        }
      }
    },
    "discovery": {
      "description": "configure your service to autodetect some ressources.",
      "type": "object",
      "properties": {
        "hive": {
          "type": "boolean",
          "title": "Enable hive metastore discovery",
          "description": "discover your hive metastore service",
          "default": true
        },
        "mlflow": {
          "type": "boolean",
          "title": "Enable mlflow discovery",
          "description": "discover your mlflow service",
          "default": true
        },
        "metaflow": {
          "type": "boolean",
          "title": "Enable metaflow discovery",
          "description": "discover your metaflow service",
          "default": true
        }
      }
    },
    "security": {
      "description": "security specific configuration",
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Password",
          "default": "changeme",
          "render": "password",
          "x-onyxia": {
            "overwriteDefaultWith": "{{service.oneTimePassword}}",
            "overwriteSchemaWith": "ide/password.json"
          }
        },
        "networkPolicy": {
          "type": "object",
          "description": "Define access policy to the service",
          "x-onyxia": {
            "overwriteSchemaWith": "network-policy.json"
          },
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enable network policy",
              "description": "Only pod from the same namespace will be allowed",
              "default": false,
              "x-onyxia": {
                "overwriteDefaultWith": "region.defaultNetworkPolicy"
              }
            },
            "from": {
              "description": "Array of sources allowed to have network access to your service",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              },
              "default": [],
              "x-onyxia": {
                "hidden": true,
                "overwriteDefaultWith": "region.from"
              }
            }
          }
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "description": "NodeSelector",
      "default": {},
      "x-onyxia": {
        "overwriteDefaultWith": "region.nodeSelector",
        "overwriteSchemaWith": "nodeSelector-gpu.json"
      }
    },
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Details",
      "properties": {
        "enabled": {
          "description": "Enable Ingress",
          "type": "boolean",
          "default": true,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.ingress"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          }
        },
        "userHostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-user.{{k8s.domain}}"
          }
        },
        "ingressClassName": {
          "type": "string",
          "form": true,
          "title": "ingressClassName",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{k8s.ingressClassName}}"
          }
        },
        "useCertManager": {
          "type": "boolean",
          "description": "Whether CertManager should be used to generate a certificate",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.useCertManager"
          }
        },
        "certManagerClusterIssuer": {
          "type": "string",
          "description": "certManager cluster issuer",
          "title": "CertManager Cluster Issuer",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.certManagerClusterIssuer"
          }
        },
        "useTlsSecret": {
          "type": "boolean",
          "description": "Whether you want to use the specified secretName in ingress tls",
          "default": false,
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "route": {
      "type": "object",
      "form": true,
      "title": "Route details",
      "properties": {
        "enabled": {
          "description": "Enable route",
          "type": "boolean",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "k8s.route"
          }
        },
        "hostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          }
        },
        "userHostname": {
          "type": "string",
          "form": true,
          "title": "Hostname",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-user.{{k8s.domain}}"
          }
        }
      }
    },
    "repository": {
      "description": "python repositories for pip and conda",
      "type": "object",
      "properties": {
        "pipRepository": {
          "type": "string",
          "description": "python repository for pip",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{packageRepositoryInjection.pypiProxyUrl}}"
          }
        },
        "condaRepository": {
          "type": "string",
          "description": "python repository for pip",
          "default": "",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{packageRepositoryInjection.condaProxyUrl}}"
          }
        }
      }
    },
    "startupProbe": {
      "description": "Startup probe",
      "type": "object",
      "properties": {
        "failureThreshold": {
          "type": "integer"
        },
        "initialDelaySeconds": {
          "type": "integer"
        },
        "periodSeconds": {
          "type": "integer"
        },
        "successThreshold": {
          "type": "integer"
        },
        "timeoutSeconds": {
          "type": "integer"
        }
      },
      "default": {
        "failureThreshold": 60,
        "initialDelaySeconds": 10,
        "periodSeconds": 10,
        "successThreshold": 1,
        "timeoutSeconds": 2
      },
      "x-onyxia": {
        "hidden": true,
        "overwriteDefaultWith": "region.startupProbe",
        "overwriteSchemaWith": "ide/startupProbe.json"
      }
    },
    "tolerations": {
      "description": "Array of tolerations",
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": true
      },
      "default": [],
      "x-onyxia": {
        "hidden": true,
        "overwriteDefaultWith": "region.tolerations",
        "overwriteSchemaWith": "tolerations.json"
      }
    },
    "userPreferences": {
      "description": "User Preferences",
      "type": "object",
      "properties": {
        "darkMode": {
          "type": "boolean",
          "description": "dark mode is or is not enabled",
          "default": false,
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "user.darkMode"
          }
        },
        "language": {
          "type": "string",
          "description": "Preferred language",
          "default": "en",
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "user.lang"
          }
        }
      }
    },
    "global": {
      "description": "Suspend",
      "type": "object",
      "properties": {
        "suspend": {
          "type": "boolean",
          "description": "Suspend this service",
          "default": false,
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "proxy": {
      "description": "It can be used to inject proxy settings in the services",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "proxy.json"
      },
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Inject proxy settings",
          "default": false
        },
        "httpProxy": {
          "type": "string",
          "description": "URL of the enterprise proxy for the region for HTTP.",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        },
        "httpsProxy": {
          "type": "string",
          "description": "URL of the enterprise proxy for the region for HTTPS.",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        },
        "noProxy": {
          "type": "string",
          "description": "enterprise local domain that should not take proxy comma separated",
          "default": "",
          "hidden": {
            "value": false,
            "path": "proxy/enabled"
          }
        }
      }
    },
    "certificates": {
      "description": "It can be used to inject certificate authority into the services, if the Helm chart in the catalog allows it you can bind this value to the Helm chart value to add some certificate authorities in the pod.",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "certificates.json"
      },
      "default": {},
      "properties": {
        "cacerts": {
          "type": "string",
          "description": "String of concatenated CA certificates. Alternatively a target URL can be provided.",
          "default": "",
          "x-onyxia": {
            "hidden": true
          }
        },
        "pathToCaBundle": {
          "type": "string",
          "description": "String path where a bundle is made or injected by third party solution",
          "default": "/usr/local/share/ca-certificates/",
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    },
    "message": {
      "type": "object",
      "description": "Warning message",
      "x-onyxia": {
        "hidden": true,
        "overwriteSchemaWith": "ide/message.json"
      },
      "properties": {
        "fr": {
          "type": "string",
          "description": "message \u00e0 ajouter dans les notes",
          "default": ""
        },
        "en": {
          "type": "string",
          "description": "message to add in notes",
          "default": ""
        }
      }
    }
  }
}