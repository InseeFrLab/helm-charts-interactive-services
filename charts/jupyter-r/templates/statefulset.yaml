{{- $fullName := include "library-chart.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  serviceName: {{ include "library-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.git.enabled }}
        checksum/git: {{ include (print $.Template.BasePath "/secret-git.yaml") . | sha256sum }}
        {{- end }}
        {{- if not (empty (trim (include "library-chart.secretHive" .)))}}
        checksum/hive: {{ include (print $.Template.BasePath "/secret-hive.yaml") . | sha256sum }}
        {{- end }}
        {{- if not (empty (trim (include "library-chart.secretMetaflow" .)))}}
        checksum/metaflow: {{ include (print $.Template.BasePath "/secret-metaflow.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.discovery.mlflow (not (empty (trim (include "library-chart.secretMLFlow" .)))) }}
        checksum/mlflow: {{ include (print $.Template.BasePath "/secret-mlflow.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.s3.enabled }}
        {{- if (include "library-chart.repository.enabled"  .) }}
        checksum/repository: {{ include (print $.Template.BasePath "/configmap-repository.yaml") . | sha256sum }}
        {{- end }}
        checksum/s3: {{ include (print $.Template.BasePath "/secret-s3.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.vault.enabled }}
        checksum/vault: {{ include (print $.Template.BasePath "/secret-vault.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: home
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "library-chart.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.discovery.hive }}
        - name: config-files
          emptyDir: {}
        - name: secret-hive
          secret:
            secretName: {{ include "library-chart.secretNameHive" . }}
        {{- end }}
        {{- if .Values.discovery.metaflow }}
        - name: secret-metaflow
          secret:
            secretName: {{ include "library-chart.secretNameMetaflow" . }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      subdomain: {{ include "library-chart.fullname" . }}
      hostname: jupyter
      initContainers:
        - name: make-secrets-writable
          image: alpine
          command: 
            - sh
            - -c 
            - |
              cp -R /src/* /dest ;
              chmod -R 664 /dest/;
          volumeMounts:
            - name: config-files
              mountPath: /dest
            {{- if .Values.discovery.hive }}
            - name: secret-hive
              mountPath: /src/hive
            {{- end }}
            {{- if .Values.discovery.metaflow }}
            - name : secret-metaflow
              mountPath: /src/metaflow
            {{- end }}
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.service.image.custom.enabled }}
          image: "{{ .Values.service.image.custom.version }}"
          {{- else }}
          image: "{{ .Values.service.image.version }}"
          {{- end }}
          command: ["/bin/sh","-c"]
          args: ["{{ .Values.init.standardInitPath }} jupyter lab --no-browser --ip '0.0.0.0' --LabApp.token='$(PASSWORD)' --ContentsManager.allow_hidden=True"]
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              {{- if .Values.service.image.custom.enabled }}
              value: "{{ .Values.service.image.custom.version }}"
              {{- else }}
              value: "{{ .Values.service.image.version }}"
              {{- end }}
            - name: NB_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/work
            {{- if .Values.init.regionInit }}
            - name: REGION_INIT_SCRIPT
              value: {{ .Values.init.regionInit }}
            {{- end }}
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            {{- if .Values.environment.root }}
            - name: GRANT_SUDO
              value: "yes"
            {{- end }}
            {{- if .Values.userPreferences.darkMode }}
            - name: DARK_MODE
              value: "true"
            {{- end }}
          envFrom: 
            - secretRef:
                name: {{ include "library-chart.secretNameToken" . }}
            {{- if .Values.s3.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameS3" . }}
            {{- end }}
            {{- if .Values.vault.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameVault" . }}
            {{- end }}
            {{- if .Values.git.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameGit" . }}
            {{- end }}
            {{- if (include "library-chart.repository.enabled"  .) }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameRepository" . }}
            {{- end }}
            {{- if and .Values.discovery.mlflow (not (empty (trim (include "library-chart.secretMLFlow" .)))) }}
            - secretRef:
                name: {{ include "library-chart.secretNameMLFlow" . }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
            {{- toYaml .Values.startupProbe | nindent 12 }}     
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /home/{{ .Values.environment.user}}/work
              subPath: work
              name: home
            {{- if .Values.discovery.hive }}
            - name: config-files
              mountPath: /opt/hive/conf/hive-site.xml
              subPath: hive/hive-site.xml
            {{- end }}   
            {{- if .Values.discovery.metaflow }}
            - name: config-files
              mountPath: /home/{{ .Values.environment.user}}/.metaflowconfig/config.json
              subPath: metaflow/config.json
            {{- end }}     
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
