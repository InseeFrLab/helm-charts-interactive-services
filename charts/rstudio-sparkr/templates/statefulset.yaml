{{- $fullName := include "library-chart.fullname" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "library-chart.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  {{- if .Values.global.suspend }}
  replicas: 0
  {{- else}}
  replicas: {{ .Values.replicaCount }}
  {{- end}}
{{- end }}
  serviceName: {{ include "library-chart.fullname" . }}
  selector:
    matchLabels:
      {{- include "library-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.git.enabled }}
        checksum/git: {{ include (print $.Template.BasePath "/secret-git.yaml") . | sha256sum }}
        {{- end }}
        {{- if not (empty (trim (include "library-chart.secretHive" .)))}}
        checksum/hive: {{ include (print $.Template.BasePath "/secret-hive.yaml") . | sha256sum }}
        {{- end }}
        {{- if not (empty (trim (include "library-chart.secretIvySettings" .)))}}
        checksum/ivysettings: {{ include (print $.Template.BasePath "/secret-ivysettings.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.s3.enabled }}
        checksum/s3: {{ include (print $.Template.BasePath "/secret-s3.yaml") . | sha256sum }}
        {{- end }}
        {{- if not (empty (trim (include "library-chart.secretSparkConf" .)))}}
        checksum/sparkconf: {{ include (print $.Template.BasePath "/secret-sparkconf.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.vault.enabled }}
        checksum/vault: {{ include (print $.Template.BasePath "/secret-vault.yaml") . | sha256sum }}
        {{- end }}
        {{- if (include "library-chart.repository.enabled"  .) }}
        checksum/repository: {{ include (print $.Template.BasePath "/configmap-repository.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "library-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: config-files
          emptyDir: {}
        - name: home
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "library-chart.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 10Gi
        {{- if .Values.s3.enabled }}
        - name: secret-coresite
          secret:
            secretName: {{ include "library-chart.secretNameCoreSite" . }}
        {{- end }}
        {{- if (.Values.proxy).enabled }}
        - name: secret-proxy
          secret:
            secretName: {{ include "library-chart.secretNameProxy" . }}
        {{- end }}
        {{- if .Values.spark.default }}
        - name: secret-sparkconf
          secret:
            secretName: {{ include "library-chart.secretNameSparkConf" . }}
        {{- end }}
        {{- if and (.Values.spark.default) (.Values.repository.mavenRepository) }}
        - name: secret-ivysettings
          secret:
            secretName: {{ include "library-chart.secretNameIvySettings" . }}
        {{- end }}
        {{- if .Values.discovery.hive }}
        - name: secret-hive
          secret:
            secretName: {{ include "library-chart.secretNameHive" . }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "library-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      subdomain: {{ include "library-chart.fullname" . }}
      hostname: rstudio
      initContainers:
        - name: make-secrets-writable
          image: inseefrlab/onyxia-base:latest
          imagePullPolicy: IfNotPresent
          command: 
            - sh
            - -c 
            - |
              echo 'initContainer make-secrets-writable is started';
              {{- if .Values.s3.enabled }}
              mkdir /dest/coresite;
              cp /src/coresite/core-site.xml /dest/coresite/core-site.xml;
              {{- end }}
              {{- if .Values.spark.default }}
              mkdir /dest/spark;
              cp /src/spark/spark-defaults.conf /dest/spark/spark-defaults.conf;
              {{- end }}
              {{- if and (.Values.spark.default) (.Values.repository.mavenRepository) }}
              mkdir /dest/ivysettings;
              cp /src/ivysettings/ivysettings.xml /dest/ivysettings/ivysettings.xml;
              {{- end }}
              {{- if .Values.discovery.hive }}
              mkdir /dest/hive;
              cp /src/hive/hive-site.xml /dest/hive/hive-site.xml;
              {{- end }}         
          volumeMounts:
            {{- if .Values.s3.enabled }}
            - name: secret-coresite
              mountPath: /src/coresite
            {{- end }}
            {{- if and (.Values.spark.default) (.Values.repository.mavenRepository) }}
            - name: secret-ivysettings
              mountPath: /src/ivysettings
            {{- end }}
            - name: config-files
              mountPath: /dest
            {{- if .Values.spark.default }}
            - name: secret-sparkconf
              mountPath: /src/spark
            {{- end }}
            {{- if .Values.discovery.hive }}
            - name: secret-hive
              mountPath: /src/hive
            {{- end }}
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
          securityContext:
            {{- toYaml .Values.initContainerSecurityContext | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.service.image.custom.enabled }}
          image: "{{ .Values.service.image.custom.version }}"
          {{- else }}
          image: "{{ .Values.service.image.version }}"
          {{- end }}
          command: ["/bin/sh","-c"]
          args: ["{{ .Values.init.standardInitPath }} /init"]
          imagePullPolicy: {{ .Values.service.image.pullPolicy }}
          env:
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGE_NAME
              {{- if .Values.service.image.custom.enabled }}
              value: "{{ .Values.service.image.custom.version }}"
              {{- else }}
              value: "{{ .Values.service.image.version }}"
              {{- end }}
            - name: PASSWORD
              value: {{ .Values.security.password }}
            - name: ROOT
              value: "TRUE"
            - name: PROJECT_USER
              value: {{ .Values.environment.user }}
            - name: PROJECT_GROUP
              value: {{ .Values.environment.group }}
            - name: ROOT_PROJECT_DIRECTORY
              value: /home/{{ .Values.environment.user }}/work
            {{- if .Values.init.regionInit }}
            - name: REGION_INIT_SCRIPT
              value: {{ .Values.init.regionInit }}
            {{- end }}
            {{- if .Values.init.personalInit }}
            - name: PERSONAL_INIT_SCRIPT
              value: {{ .Values.init.personalInit }}
            {{- end }}
            {{- if .Values.init.personalInitArgs }}
            - name: PERSONAL_INIT_ARGS
              value: {{ .Values.init.personalInitArgs }}
            {{- end }}
            {{- if .Values.userPreferences.darkMode }}
            - name: DARK_MODE
              value: "true"
            {{- end }}
          envFrom: 
            - secretRef:
                name: {{ include "library-chart.secretNameToken" . }}
            {{- if .Values.s3.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameS3" . }}
            {{- end }}
            {{- if .Values.vault.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameVault" . }}
            {{- end }}
            {{- if .Values.git.enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameGit" . }}
            {{- end }}
            {{- if (.Values.proxy).enabled }}
            - secretRef:
                name: {{ include "library-chart.secretNameProxy" . }}
            {{- end }}
            {{- if (include "library-chart.repository.enabled"  .) }}
            - configMapRef:
                name: {{ include "library-chart.configMapNameRepository" . }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
            timeoutSeconds: 2
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
          {{- if hasKey .Values "startupProbe" }}
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.networking.service.port }}
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /home/{{ .Values.environment.user }}/work
              subPath: work
              name: home
            - mountPath: /dev/shm
              name: dshm
            {{- if .Values.s3.enabled }}
            - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
              subPath: coresite/core-site.xml
              name: config-files
            {{- end }}
            {{- if .Values.spark.default }}
            - name: config-files
              mountPath: /opt/spark/conf/spark-defaults.conf
              subPath: spark/spark-defaults.conf
            {{- end }}
            {{- if and (.Values.spark.default) (.Values.repository.mavenRepository) }}
            - name: config-files
              mountPath: /opt/spark/conf/ivysettings.xml
              subPath: ivysettings/ivysettings.xml
            {{- end }}
            {{- if .Values.discovery.hive }}
            - name: config-files
              mountPath: /opt/hive/conf/hive-site.xml
              subPath: hive/hive-site.xml
            {{- end }}         
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
